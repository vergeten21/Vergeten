1)

#include <stdio.h>
#include <stdlib.h>
int sum(int a, int b)
{
    return a + b;
}
int main()
{
    int add = sum(10,30);
    printf("Sum is: %d", add);
    return 0;
}

2)

#include <math.h>
#include <stdio.h>
int main()
{
  double Number;
  Number = 49;
  double squareRoot = sqrt(Number);
  printf("The Square root of %.2lf = %.2lf", 
          Number, squareRoot);
  return 0;
}

3)

#include <stdio.h>
int sum(int a, int b) 
{ 
  return a + b; 
}
int main()
{
  int a = 30, b = 40;
  int res = sum(a, b);
  printf("Sum is: %d", res);
  return 0;
}

4)

#include <stdio.h>
int sum(int a, int b)
{ 
    return a+ b;
}
int main()
{ 
    int add = sum(10,30);
    printf("Sum is: %d", add);
    return 0;
}

5)

#include <stdio.h>
void swap(int var1, int var2)
{
  int temp = var1;
  var1 = var2;
  var2 = temp;
}
int main()
{
  int var1 = 3, var2 = 2;
  printf("Before swap Value of var1 and var2 is: %d, %d\n",
          var1, var2);
  swap(var1, var2);
  printf("After swap Value of var1 and var2 is: %d, %d",
          var1, var2);
  return 0;
}

6)

#include <stdio.h>
void swap(int *var1, int *var2)
{
  int temp = *var1;
  *var1 = *var2;
  *var2 = temp;
}
int main()
{
  int var1 = 3, var2 = 2;
  printf("Before swap Value of var1 and var2 is: %d, %d\n",
          var1, var2);
  swap(&var1, &var2);
  printf("After swap Value of var1 and var2 is: %d, %d",
          var1, var2);
  return 0;
}

7)

#include <stdio.h>
void rec(int n)
{
    if(n ==6) return;
    printf("Recursion Level %d\n",n);
    rec(n+1);
}
int main()
{
    rec(1);
    return 0;
}

8)

#include <stdio.h>
void rec(int n)
{
    if(n==0) return;
    printf("Recursion Level %d\n",n);
    rec(n-1);
}
int main()
{
    rec(6);
    return 0;
}

9)

#include <stdio.h>
int power(int n, int m)
{
    if (m==0) return 1;
    return n * power(n, m-1);
}
int main()
{
    int n=2, m=3;
    int result = power(n, m);
    printf("%d raised to the power of %d is: %d\n", n, m, result);
    return 0;
}

10)

#include <stdio.h>
 int factorialUsingRecursion(int n)
{
    if (n == 0)
        return 1;
    return n * factorialUsingRecursion(n - 1);
}
 int factorialUsingIteration(int n)
{
    int res = 1, i;
    for (i = 2; i <= n; i++)
        res *= i;
    return res;
}
int main()
{
    int num = 5;
    printf("Factorial of %d using Recursion is: %d\n", num,
           factorialUsingRecursion(5));
    printf("Factorial of %d using Iteration is: %d", num,
           factorialUsingIteration(5));
    return 0;
}
